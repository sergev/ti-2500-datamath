/**
 * @file WxCalcWindow.hpp
 * @brief The window class for the calculator.
 * @author Dominique LaSalle <dominique@solidlake.com>
 * Copyright 2017, Solid Lake LLC
 * @version 1
 * @date 2017-03-28
 */

#ifndef WXCALC_SRC_WXCALCWINDOW_HPP
#define WXCALC_SRC_WXCALCWINDOW_HPP

#include <wx/wx.h>

#include <string>
#include <vector>

namespace WxCalc {

class WxCalcWindow : public wxFrame {
public:
    /**
     * @brief Our default constructor.
     */
    WxCalcWindow();

private:
    // display
    wxTextCtrl *m_display;

    // buttons
    std::vector<wxButton *> m_numButtons;
    wxButton *m_deciButton;
    wxButton *m_signButton;
    wxButton *m_addButton;
    wxButton *m_subButton;
    wxButton *m_mulButton;
    wxButton *m_divButton;
    wxButton *m_clsButton;
    wxButton *m_equalsButton;

    // internal variables
    std::string m_preDecimal;
    std::string m_postDecimal;
    bool m_decimal;
    bool m_positive;
    double m_total;
    double m_last;
    int m_op;
    bool m_entryMode;

    /**
     * @brief Get the numerical value currently displayed.
     *
     * @return The current value, or 0 if none is displayed.
     */
    double getCurrentValue();

    /**
     * @brief Update the display with the last entered value.
     */
    void updateDisplay();

    /**
     * @brief Clear internal variables used for tracking an entered value.
     */
    void clear();

    /**
     * @brief Clear internal variables used for tracking an entered value and
     * store that entered value as the running total.
     */
    void clearAndStore();

    /**
     * @brief Perform the last entered operation with the running total and
     * last entered value.
     */
    void performOp();

    /**
     * @brief Show the running total on the display.
     */
    void showTotal();

    /**
     * @brief Handle a number button being pressed.
     *
     * @tparam NUM The number of the button.
     * @param wxCommandEvent The event generated by wxWidgets (currently
     * unused).
     */
    template <int NUM>
    void onNumButton(wxCommandEvent &);

    /**
     * @brief Handle an operation button being pressed.
     *
     * @tparam OP The operation identifier of the button.
     * @param wxCommandEvent The event generated by wxWidgets (currently
     * unused).
     */
    template <int OP>
    void onOpButton(wxCommandEvent &);

    // setup a static event table
    wxDECLARE_EVENT_TABLE();

    // disable copying of the class
    WxCalcWindow(WxCalcWindow const &rhs);
    WxCalcWindow &operator=(WxCalcWindow const &rhs);
};

} // namespace WxCalc

#endif
